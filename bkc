#!/bin/bash
############################################################
# Set variables                                            #
############################################################

UBUNTU_VERSION="crops/yocto:ubuntu-20.04-base"
KAS_BRANCH="master"
YOCTO_VERSION="honister"
RED="\e[31m"
BLUE="\e[1;34m"
GREEN="\e[32m"
ENDCOLOR="\e[0m"
############################################################
# Help                                                     #
############################################################
main() {
	echo -e "${BLUE} ╔╗ ╔═╗╔╦╗╔╦╗╔═╗╦═╗   ╦╔═╔═╗╔═╗   ╔═╗╔═╗╔╗╔╦╗╔═╗╦╔╗╔╔═╗╦═╗ ${ENDCOLOR} "
	echo -e "${GREEN} ╠╩╗║╣  ║  ║ ║╣ ╠╦╝───╠╩╗╠═╣╚═╗───║  ║ ║║║║║ ╠═╣║║║║║╣ ╠╦╝ ${ENDCOLOR}"
	echo -e "${BLUE} ╚═╝╚═╝ ╩  ╩ ╚═╝╩╚═   ╩ ╩╩ ╩╚═╝   ╚═╝╚═╝╝╚╝╩ ╩ ╩╩╝╚╝╚═╝╩╚═  ${ENDCOLOR}"
}
Help() {
	# Display Help
	echo "Help output ."
	echo "Syntax: ./bkc [-r|b|h|v]"
	echo "options:"
	echo "r     Run the container"
	echo "s     Stop the container"
	echo "b     Build."
	echo "h     Print this Help."
	echo "v     Print kas version for this script."
echo -e  "x ${RED}    If all fail use the -x option.${ENDCOLOOR}"
	echo
}

version() {
	# Display Versions

	echo KAS_BRANCH:$KAS_BRANCH
	echo UBUNTU_VERSION=$UBUNTU_VERSION
	echo YOCTO_VERSION=$YOCTO_VERSION
}
#do_docker_build
do_seperate_user() {

	echo -e "${BLUE}  After this step you will have a new user for Yocto build system.           ${ENDCOLOR} "
	echo -e "${BLUE}       This part of BKC is for users who faced problems with                ${ENDCOLOR}"
	echo -e "${BLUE}  permissions in their systems or just want a seperate place for Yocto       ${ENDCOLOR}"
	echo -e "${RED}       This is a hackish way of making a stable isolated environment		     ${ENDCOLOR}"
	echo -e "${GREEN}      But it is safe you can always delete the new created user                 ${ENDCOLOR}"
	sleep 1s
	#Creating new user and grabbing the uid/gid
	export BKC_USER=bkc-dev
	export BKC_GROUP=bkc-dev
	
	#group check
	if [ $(getent group ${BKC_GROUP} ) ]
	then
		echo -e "-->  ${BLUE} Group exists skipping ...:${BKC_GROUP} ${ENDCOLOR}"
		sudo userdel bkc-dev
		sudo groupdel bkc-dev
		#sudo rm -rf /home/bkc-dev
	fi
	

	#user check
	if [ $(id -u ${BKC_USER})  ]
	then 
		echo -e "-->  ${BLUE} User exists skipping ...:${BKC_USER} ${ENDCOLOR}"
	else
	sudo useradd -m bkc-dev 
	sudo usermod -aG bkc-dev bkc-dev
	sudo usermod --shell /bin/bash bkc-dev
	sudo passwd bkc-dev
	echo -e "-->  ${BLUE} user created ${ENDCOLOR}"

	fi
	export BKC_GID=$(id -g $BKC_GROUP )
	export BKC_UID=$(id -u $BKC_USER )
sudo -i -u bkc-dev bash << EOF
	echo "In bkc-dev"
	whoami
  sudo usermod -aG docker $USER
  cd $HOME
  newgrp docker
	-c "$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)"
EOF
	echo "Out of bkc-dev"
	
	echo -e "-->  ${BLUE} Setting user id:${BKC_UID} ${ENDCOLOR}"
	echo -e "-->  ${BLUE} Setting group id:${BKC_GID} ${ENDCOLOR}"
	echo -e "-->  ${BLUE} Setting  username:${BKC_USER} ${ENDCOLOR}"
	echo -e "-->  ${BLUE} Now use 'su bkc-dev' command to switch  ${ENDCOLOR}"
	echo -e "-->  ${BLUE}    user and use the script as normal	  ${ENDCOLOR}"
}

#do_docker_build
do_docker_build() {


	export BKC_UID=$(id -u)
	export BKC_GID=$(id -g)
	export BKC_USER=$USER
	echo -e "-->  ${BLUE} Setting user id:${BKC_UID} ${ENDCOLOR}"
	echo -e "-->  ${BLUE} Setting group id:${BKC_GID} ${ENDCOLOR}"
	echo -e "-->  ${BLUE} Setting  username:${BKC_USER} ${ENDCOLOR}" 
	docker compose build

}
do_docker_stop() {


	export BKC_UID=$(id -u)
	export BKC_GID=$(id -g)
	export BKC_USER=$USER
	echo -e "-->  ${BLUE} Setting user id:${BKC_UID} ${ENDCOLOR}"
	echo -e "-->  ${BLUE} Setting group id:${BKC_GID} ${ENDCOLOR}"
	echo -e "-->  ${BLUE} Setting  username:${BKC_USER} ${ENDCOLOR}" 
	docker compose down -v
	echo -e "-->  ${GREEN} KBC stopped ... ${ENDCOLOR}" 
	sleep 1s

}
# run function
do_docker_run() {
	set -e
	export BKC_UID=$(id -u)
	export BKC_GID=$(id -g)
	export BKC_USER=$USER
	docker compose up -d
	docker exec -it better-kas-container-v1 /bin/bash
}

do_docker_run_for_CI() {
	set -e
	export BKC_UID=$(id -u)
	export BKC_GID=$(id -g)
	export BKC_USER=$USER
	docker compose up -d
}

############################################################
############################################################
# Main program                                             #
############################################################
############################################################

main

while getopts ":rbschvx" option; do
	case $option in
	r)

		do_docker_run
		exit
		;;
	b)

		do_docker_build
		exit
		;;
	s)

		do_docker_stop
		exit
		;;
	c)
		do_docker_run_for_CI
		exit
		;;
	h)
		Help
		exit
		;;
	v)
		version
		exit
		;;
	x)
		do_seperate_user
		exit
		;;
	"")
		main
		exit
		;;
	esac
done
